local this={}

local version = "CS-OS v.2.0"
local termW = 0
local termH = 0
local termTextColor = colors.red
local pbar = nil

local tickSleepDuration = 0.1

---------------------------------------------------
function this.GetVersion()
  return version
end
---------------------------------------------------
function this.Sleep()
  sleep(tickSleepDuration)
end
---------------------------------------------------
function this.DisplayMessage(message)
  term.setCursorPos(1, termH)
  term.clearLine()
  term.write("> " .. message)
end
---------------------------------------------------
function this.DisplayError(message)
  term.setCursorPos(1, termH)
  term.clearLine()
  term.setTextColor(colors.red)
  term.write("> ERROR: " .. message)
  term.setTextColor(termTextColor)
end
---------------------------------------------------
function this.ProgressTick()
  pbar:IncValue()
  pbar:Draw()
end
---------------------------------------------------
function this.Start(extrasteps)
  term.clear()
  term.setCursorPos(1,1)

  advterm = require("/csos/lib/req-advterm")
  advterm.Enable()
  term.reset()
  print("> AdvancedTerminal module enabled")
  this.Sleep()

  write("> Loading library class-progressbar ...")
  this.Sleep()
  local pbarClass = require("/csos/lib/class-progressbar")
  print(" DONE")
  this.Sleep()

  write("> Calculating terminal parameters ...")
  this.Sleep()
  termW, termH = term.getSize()
  termTextColor = term.getTextColor()
  print(" DONE")
  this.Sleep()

  term.reset()
  term.setCursorPos((termW - #version) / 2 + 1, termH / 2)
  term.setTextColor(colors.green)
  term.write(version)
  term.setTextColor(termTextColor)

  this.DisplayMessage("Initiating progress bar ...")
  this.Sleep()
  pbar = pbarClass.new(4, termH / 2 + 2, termW - 6, 1 + (extrasteps or 0))
  pbar:Draw()
  this.DisplayMessage("Initiating progress bar ... DONE")
  this.Sleep()
end
---------------------------------------------------
function this.Finish()
  this.DisplayMessage("Operating System boot complete")
  this.ProgressTick()
  sleep(2.5)
end
---------------------------------------------------
return this
